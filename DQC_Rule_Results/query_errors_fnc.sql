-- plpgsql function for executing errors script with user input for date range
-- At a future date could add argument to function letting user specify the
-- rules they want to query

-- due to cannot open multi-query plan as cursor error, need to change temp
-- tables to "WITH" tables in errors query

-- Working toy example from filing table
-- DROP FUNCTION IF EXISTS query_filing (start_date DATE);
-- CREATE OR REPLACE FUNCTION query_filing (start_date DATE) RETURNS SETOF RECORD AS
-- $Q$
-- BEGIN
--     RETURN QUERY EXECUTE $$
--         WITH _tmp_filing AS(
--             SELECT DISTINCT creation_software, filing_date
--             FROM filing
--             WHERE filing_date > $1
--             AND filing_date < '2017-05-23'
--             ORDER BY creation_software
--         )
--         SELECT * FROM _tmp_filing
--         $$
--         USING start_date;
-- END;
-- $Q$
-- LANGUAGE plpgsql;
--
-- SELECT * FROM query_filing ('2017-05-11') AS t(creation_software text, filing_date date);

DROP FUNCTION IF EXISTS query_errors (start_date DATE, end_date DATE);
CREATE OR REPLACE FUNCTION query_errors (start_date DATE, end_date DATE) RETURNS
SETOF RECORD AS
$Q$
BEGIN
    RETURN QUERY EXECUTE $$
    -- Using dollar quoting
    WITH _tmp_period_of_interest AS (
            SELECT e.name AS company_name,
            e.reference_number AS cik,
            e.standard_industry_code AS sic,
            f.form_type,
            f.filing_date,
            CASE
              WHEN d.document_url::text = 'http://xbrl.us/us-gaap/1.0/elts/us-gaap-2008-03-31.xsd'::text THEN '2008'::text
              WHEN d.document_url::text = 'http://taxonomies.xbrl.us/us-gaap/2009/elts/us-gaap-2009-01-31.xsd'::text THEN '2009'::text
              WHEN d.document_url::text = 'http://xbrl.fasb.org/us-gaap/2011/elts/us-gaap-2011-01-31.xsd'::text THEN '2011'::text
              WHEN d.document_url::text = 'http://xbrl.fasb.org/us-gaap/2012/elts/us-gaap-2012-01-31.xsd'::text THEN '2012'::text
              WHEN d.document_url::text = 'http://xbrl.fasb.org/us-gaap/2013/elts/us-gaap-2013-01-31.xsd'::text THEN '2013'::text
              WHEN d.document_url::text = 'http://xbrl.fasb.org/us-gaap/2014/elts/us-gaap-2014-01-31.xsd'::text THEN '2014'::text
              WHEN d.document_url::text = 'http://xbrl.fasb.org/us-gaap/2015/elts/us-gaap-2015-01-31.xsd'::text THEN '2015'::text
              WHEN d.document_url::text = 'http://xbrl.fasb.org/us-gaap/2016/elts/us-gaap-2016-01-31.xsd'::text THEN '2016'::text
              WHEN d.document_url::text = 'http://xbrl.fasb.org/us-gaap/2017/elts/us-gaap-2017-01-31.xsd'::text THEN '2017'::text
              ELSE d.document_url::text
            END AS taxonomy,
            f.entry_url,
            CASE
              WHEN f.creation_software LIKE '%XBRL Document Created with Wdesk from Workiva%'::TEXT THEN 'Workiva'::TEXT
              WHEN f.creation_software LIKE '%XBRL document created by Certent Disclosure Management%' THEN 'Certent'::TEXT
              WHEN f.creation_software LIKE '%Generated by ThunderDome XBRL%' THEN 'ThunderDome'::TEXT
              WHEN f.creation_software LIKE '%Generated by EDGARfilings PROfile%Summit Financial Printing%' THEN 'EDGARfilings PROfile_Summit Financial Printing'::TEXT
              WHEN f.creation_software LIKE '%Created by S2 Filings%LLC%' THEN 'Created by S2 Filings LLC'::TEXT
              WHEN f.creation_software LIKE '%Created by Zenhancer- http://www.zenhancer.com%' THEN 'Created by Zenhancer'::TEXT
              WHEN f.creation_software LIKE '%Vistalytics - iFile Suite%' THEN 'Vistalytics - iFile Suite' ::TEXT
              WHEN f.creation_software LIKE '%Produced by NeoClaurs  iFile%' THEN 'Produced by NeoClaurs iFile'::TEXT
              ELSE f.creation_software
            END AS creation_software,
            f.filing_number AS accession_number,
            f.authority_html_url AS sec_url,
            e.filer_category AS filer_status,
            r.report_id
             FROM
             filing f
             JOIN entity e ON e.entity_id=f.entity_id
             JOIN report r ON r.filing_id=f.filing_id
            JOIN document d ON r.standard_schema_doc_id = d.document_id
            WHERE f.filing_date>= $1 AND f.filing_date < $2
        ), _tmp_messages AS (
            SELECT m.message_id, m.message_code, regexp_replace(m.value, E'[\\n\\r]+', ' ', 'g' ) AS message_value, m.report_id, mr.object_id
            FROM message m
            JOIN _tmp_period_of_interest rb ON rb.report_id=m.report_id
            LEFT JOIN message_reference mr ON m.message_id=mr.message_id
            WHERE message_code LIKE 'DQC.US.00%'
        ), _tmp_datapoints AS (
            SELECT a.name, a.qname, a.base_type,
            CASE
              WHEN a.base_type='String' THEN 'String'
              WHEN a.base_type='TextBlock' THEN 'TextBlock'
              ELSE regexp_replace(dp.value, E'[\\n\\r]+', ' ', 'g' )
              END AS fact_value,
              dp.aspect_id,
              dp.period_id,
              dp.aspect_value_selection_id,
              dp.report_id,
              dp.datapoint_id,
              m.message_id,
              m.message_code,
              m.message_value,
              p.start_date,
              p.end_date
            FROM data_point dp
            JOIN _tmp_messages m ON m.object_id=dp.datapoint_id
            LEFT JOIN aspect a ON a.aspect_id=dp.aspect_id
            LEFT JOIN period p ON p.period_id=dp.period_id
        ), _tmp_results AS (
            SELECT DISTINCT ON (dp.message_id)
            rb.company_name,
            rb.cik,
            rb.sic,
            rb.form_type,
            rb.filing_date,
            rb.taxonomy,
            rb.creation_software,
            rb.accession_number,
            rb.sec_url,
            rb.entry_url,
            dc.count AS fact_count,
            rb.filer_status,
            dp.message_code,
            dp.name AS element_name,
            CASE
              WHEN dp.base_type='String' THEN 'String'
              WHEN dp.base_type='TextBlock' THEN 'TextBlock'
              ELSE regexp_replace(dp.fact_value, E'[\\n\\r]+', ' ', 'g' )
            END AS fact_value,
            dp.start_date,
            dp.end_date,
            da.dimension_names,
            dp.message_value,
              CASE
               WHEN dp.qname::text ~~ '{http://xbrl.sec.gov%'::text THEN 'GAAP'::text
               WHEN dp.qname::text ~~ '{http://fasb.org/%'::text THEN 'GAAP'::text
               WHEN dp.qname::text ~~ '{http://xbrl.us/%'::text THEN 'GAAP'::text
               ELSE 'EXTENSION'::text
              END AS element_source,
            da.dimension_source,
            dp.message_id,
            NULL AS element_name_2,
            NULL AS fact_value_2,
            NULL AS start_date_2,
            NULL AS end_date_2,
            NULL AS dimension_names_2,
            NULL AS message_value_2,
            NULL AS element_source_2,
            NULL AS dimension_source_2
            FROM _tmp_period_of_interest rb
            JOIN _tmp_datapoints dp ON rb.report_id=dp.report_id
            LEFT OUTER JOIN _mv_datapoint_counts dc ON dc.report_id=rb.report_id
            LEFT OUTER JOIN  _mv_dimensions_all da ON da.aspect_value_selection_id=dp.aspect_value_selection_id
            --JOIN _tmp_period p ON p.period_id=dp.period_id
            WHERE dp.message_code NOT LIKE 'DQC.US.0005%'
            AND dp.message_code NOT LIKE 'DQC.US.0006%'
            AND dp.message_code NOT LIKE 'DQC.US.0018%' -- Added rule 18
            AND dp.message_code NOT LIKE 'DQC.US.0033%'
            AND dp.message_code NOT LIKE 'DQC.US.0008.1%' -- Added rule 8.1
            AND dp.message_code NOT LIKE 'DQC.US.0011.1%' -- Added rule 11.1

            UNION
            -- Multiple References Table
            SELECT DISTINCT ON (dp.message_id)
            rb.company_name,
            rb.cik,
            rb.sic,
            rb.form_type,
            rb.filing_date,
            rb.taxonomy,
            rb.creation_software,
            rb.accession_number,
            rb.sec_url,
            rb.entry_url,
            dc.count AS fact_count,
            rb.filer_status,
            --rb.period_end,
            dp.message_code,
            dp.name AS element_name,
            CASE
              WHEN dp.base_type='String' THEN 'String'
              WHEN dp.base_type='TextBlock' THEN 'TextBlock'
              ELSE regexp_replace(dp.fact_value, E'[\\n\\r]+', ' ', 'g' )
            END AS fact_value,
            dp.start_date,
            dp.end_date,
            da.dimension_names,
            dp.message_value,
             CASE
               WHEN dp.qname::text ~~ '{http://xbrl.sec.gov%'::text THEN 'GAAP'::text
               WHEN dp.qname::text ~~ '{http://fasb.org/%'::text THEN 'GAAP'::text
               WHEN dp.qname::text ~~ '{http://xbrl.us/%'::text THEN 'GAAP'::text
               ELSE 'EXTENSION'::text
              END AS element_source,
            da.dimension_source,
            dp.message_id,
            dp2.name AS element_name_2,
            CASE
              WHEN dp2.base_type='String' THEN 'String'
              WHEN dp2.base_type='TextBlock' THEN 'TextBlock'
              ELSE regexp_replace(dp2.fact_value, E'[\\n\\r]+', ' ', 'g' )
            END AS fact_value_2,
            dp2.start_date AS start_date_2,
            dp2.end_date AS end_date_2,
            da2.dimension_names AS dimension_names_2,
            dp2.message_value AS message_value_2,
              CASE
               WHEN dp2.qname::text ~~ '{http://xbrl.sec.gov%'::text THEN 'GAAP'::text
               WHEN dp2.qname::text ~~ '{http://fasb.org/%'::text THEN 'GAAP'::text
               WHEN dp2.qname::text ~~ '{http://xbrl.us/%'::text THEN 'GAAP'::text
               ELSE 'EXTENSION'::text
              END AS element_source_2,
            da2.dimension_source AS dimension_source_2
            FROM _tmp_period_of_interest rb
            JOIN _tmp_datapoints dp ON rb.report_id=dp.report_id
            LEFT OUTER JOIN _tmp_datapoints dp2 ON dp2.message_id = dp.message_id AND dp2.datapoint_id<>dp.datapoint_id
            LEFT OUTER JOIN _mv_datapoint_counts dc ON dc.report_id=rb.report_id
            LEFT OUTER JOIN  _mv_dimensions_all da ON da.aspect_value_selection_id=dp.aspect_value_selection_id
            LEFT OUTER JOIN _mv_dimensions_all da2 ON da2.aspect_value_selection_id=dp2.aspect_value_selection_id
            WHERE
            (dp.message_code LIKE 'DQC.US.0008.1%'
            OR dp.message_code LIKE 'DQC.US.0011.1%'
            OR dp.message_code LIKE 'DQC.US.0005%'
            OR dp.message_code LIKE 'DQC.US.0006%'
            OR dp.message_code LIKE 'DQC.US.0033%')

            UNION
            -- Rule 18 -- Extracts element name from message, null for fact info
            SELECT DISTINCT ON (m.message_id)
            rb.company_name,
            rb.cik,
            rb.sic,
            rb.form_type,
            rb.filing_date,
            rb.taxonomy,
            rb.creation_software,
            rb.accession_number,
            rb.sec_url,
            rb.entry_url,
            dc.count AS fact_count,
            rb.filer_status,
            --rb.period_end,
            m.message_code AS message_code,
            regexp_replace(m.message_value, E'\\s.*', '') AS element_name, -- Drops everything after the space
            NULL AS fact_value,
            NULL AS start_date,
            NULL AS end_date,
            NULL AS dimension_names,
            m.message_value AS message_value,
            NULL AS element_source,
            NULL AS dimension_source,
            m.message_id,
            NULL AS element_name_2,
            NULL AS fact_value_2,
            NULL AS start_date_2,
            NULL AS end_date_2,
            NULL AS dimension_names_2,
            NULL AS message_value_2,
            NULL AS element_source_2,
            NULL AS dimension_source_2
            FROM _tmp_period_of_interest rb
            JOIN _tmp_messages m ON rb.report_id=m.report_id
            LEFT OUTER JOIN _mv_datapoint_counts dc ON dc.report_id=rb.report_id
            WHERE m.message_code LIKE 'DQC.US.0018%'

            UNION
            -- Null Object ID
            SELECT DISTINCT ON (m.message_id)
            rb.company_name,
            rb.cik,
            rb.sic,
            rb.form_type,
            rb.filing_date,
            rb.taxonomy,
            rb.creation_software,
            rb.accession_number,
            rb.sec_url,
            rb.entry_url,
            dc.count AS fact_count,
            rb.filer_status,
            --rb.period_end,
            m.message_code AS message_code,
            NULL AS element_name,
            NULL AS fact_value,
            NULL AS start_date,
            NULL AS end_date,
            NULL AS dimension_names,
            m.message_value AS message_value,
            NULL AS element_source,
            NULL AS dimension_source,
            m.message_id,
            NULL AS element_name_2,
            NULL AS fact_value_2,
            NULL AS start_date_2,
            NULL AS end_date_2,
            NULL AS dimension_names_2,
            NULL AS message_value_2,
            NULL AS element_source_2,
            NULL AS dimension_source_2
            FROM _tmp_period_of_interest rb
            JOIN _tmp_messages m ON rb.report_id=m.report_id
            LEFT OUTER JOIN _mv_datapoint_counts dc ON dc.report_id=rb.report_id
            WHERE m.object_id IS NULL AND message_code LIKE 'DQC.US.%'

            UNION
            -- Null report ID
            SELECT DISTINCT ON (rb.report_id)
            rb.company_name,
            rb.cik,
            rb.sic,
            rb.form_type,
            rb.filing_date,
            rb.taxonomy,
            rb.creation_software,
            rb.accession_number,
            rb.sec_url,
            rb.entry_url,
            dc.count AS fact_count,
            rb.filer_status,
            --rb.period_end,
            NULL AS message_code,
            NULL AS element_name,
            NULL AS fact_value,
            NULL AS start_date,
            NULL AS end_date,
            NULL AS dimension_names,
            NULL AS message_value,
            NULL AS element_source,
            NULL AS dimension_source,
            NULL AS message_id,
            NULL AS element_name_2,
            NULL AS fact_value_2,
            NULL AS start_date_2,
            NULL AS end_date_2,
            NULL AS dimension_names_2,
            NULL AS message_value_2,
            NULL AS element_source_2,
            NULL AS dimension_source_2
            FROM _tmp_period_of_interest rb
            FULL OUTER JOIN _tmp_datapoints dp ON rb.report_id=dp.report_id
            LEFT OUTER JOIN _mv_datapoint_counts dc ON dc.report_id=rb.report_id
            WHERE dp.report_id IS NULL
        )
    SELECT * FROM _tmp_results
    $$
    USING start_date, end_date;
END;
$Q$
LANGUAGE plpgsql;

-- COPY (SELECT * FROM query_errors ('2017-04-01', '2017-05-15') AS
-- t(company_name character varying, cik character varying(30), sic integer,
--  form_type character varying(30), filing_date date, taxonomy text,
--   creation_software text, accession_number character varying(30), sec_url text,
--    entry_url text, fact_count bigint, filer_status character varying,
--     message_code character varying, element_name character varying,
--      fact_value text, start_date date, end_date date, dimension_names text,
--       message_value text, element_source text, dimension_source text,
--        message_id bigint, element_name_2 character varying, fact_value_2 text,
--         start_date_2 date, end_date_2 date, dimension_names_2 text,
--          message_value_2 text, element_source_2 text, dimension_source_2 text)
--           LIMIT 50) TO STDOUT WITH CSV HEADER;

-- SELECT * FROM query_errors ('<start_date>', '<end_date>') AS
-- t(company_name character varying, cik character varying(30), sic integer,
--     form_type character varying(30), filing_date date, taxonomy text,
--     creation_software text, accession_number character varying(30), sec_url text,
--     entry_url text, fact_count bigint, filer_status character varying,
--     message_code character varying, element_name character varying,
--     fact_value text, start_date date, end_date date, dimension_names text,
--     message_value text, element_source text, dimension_source text,
--     message_id bigint, element_name_2 character varying, fact_value_2 text,
--     start_date_2 date, end_date_2 date, dimension_names_2 text,
--     message_value_2 text, element_source_2 text, dimension_source_2 text);
